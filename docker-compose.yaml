version: "2.8"

services:
  timescaledb:
    image: timescale/timescaledb:latest-pg14
    restart: always
    ports:
      - 5432:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - ./data/timescaledb:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "timescale", "-U", '${POSTGRES_USER}']
      interval: 5s
      timeout: 5s
      retries: 5
    # networks:
    #   - app

  kafka:
      image: docker.io/bitnami/kafka:3.9
      ports:
        - "9092:9092"
      volumes:
        - "./kafka_data:/var/lib/kafka/data"
      environment:
        # KRaft settings
        - KAFKA_CFG_NODE_ID=0
        - KAFKA_CFG_PROCESS_ROLES=controller,broker
        - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
        # Listeners
        - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
        - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
        - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
        - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
        - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
volumes:
  kafka_data:
    driver: local

# networks:
#   app: